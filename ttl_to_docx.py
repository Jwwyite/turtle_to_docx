#read file content
ttl = open("thesaurus.ttl", "r")
text = ttl.read()
ttl.close()
del ttl


#cut classes
text = text[text.find("Classes"):]
#make an array of better classes
owl = text.split("\n\n")
#del text
del text


owl.pop(0)
owl.pop(0)
if owl[len(owl) - 1].find('Generated by the OWL API'):
    owl.pop()


#list of texts about every class in 1st part
owl_elems = []
i = -1
for owl_class in owl:
    owl_c = owl_class
    owl_elems.append([])
    if owl_c.find('prefLabel "'):
        i += 1
        owl_c = owl_c[owl_c.find('prefLabel "') + 11 : ]
        owl_elems[i].append(owl_c[:owl_c.find('"@en')])

    owl_c = owl_class
    if owl_c.find('prefLabel "'):
        owl_c = owl_c[owl_c.find('prefLabel "') + 11 : ]
        owl_c = owl_c[owl_c.find('@en ,'):]
        owl_c = owl_c[owl_c.find('"') + 1 :]
        owl_elems[i].append(owl_c[:owl_c.find('"')])
del owl_c
del owl_class


# Adding definitions to list
for i in range(len(owl)):
    concept = owl[i]
    if concept.find('skos:definition "') != -1:     
        concept = concept[concept.find('skos:definition "') + 17 : ]
        if concept[0] == '"':
            concept = concept [2:]
            concept = concept[:concept.find('"""@en')]
        else:
            concept = concept[:concept.find('"@en')]
    else:
        concept = '----------------------'
    owl_elems[i].append(concept)


    concept = owl[i]
    if concept.find('skos:definition "') != -1:
        concept = concept[concept.find('skos:definition "') + 17 : ]
        concept = concept[concept.find('@en ,'):]
        concept = concept[concept.find('"') + 1 :]
        if concept[0] == '"':
            concept = concept [2:]
            concept = concept[:concept.find('"""@ru')]
        else:
            concept = concept[:concept.find('"')]
    else:
        concept = '----------------------'
    owl_elems[i].append(concept)
del concept


for i in range(len(owl)):
    concept = owl[i]
    if concept.find("rdfs:isDefinedBy") != -1:
        concept = concept[concept.find("rdfs:isDefinedBy") + 18: concept.find("rdfs:label")]
        if concept.find(',') != -1:
            concept = [definition.strip() for definition in concept.split(',')]
            for j in range(len(concept)):
                if concept[j][0] == '"':
                    concept[j] = concept[j][1:]
                if concept[j][len(concept[j]) - 1] == '"':
                    concept[j] = concept[j][: len(concept[j]) ]
                if concept[j][0] == '<':
                    concept[j] = concept[j][1:]
                if concept[j].find('>'):
                    concept[j] = concept[j][: concept[j].find('>')]
                if concept[j].find('"@') != -1:
                    concept[j] = concept[j][: concept[j].find('"@')]
                if concept[j].find('"^^xsd') != -1:
                    concept[j] = concept[j][: concept[j].find('"^^xsd')]
            concept = '\n'.join(concept)
        else:
            if concept.find('>') != -1:
                concept = concept[:concept.find('>')]
            if concept[0] == '"':
                concept = concept[1:]
            if concept[len(concept) - 1] == '"':
                concept = concept[: len(concept[j]) ]
            if concept[0] == '<':
                concept = concept[1:]
            if concept.find('"@') != -1:
                concept = concept[: concept.find('"@')]
            if concept.find('"^^xsd') != -1:
                concept = concept[: concept.find('"^^xsd')]
    else:
        concept = '----------------------'
    owl_elems[i].append(concept)


for i in range(len(owl_elems)):
    if owl_elems[i][4].find('\\') != -1:
        owl_elems[i][4] = owl_elems[i][4].replace('\\', '')
    if owl_elems[i][4].find('" ;') != -1:
        owl_elems[i][4] = owl_elems[i][4][:owl_elems[i][4].find('" ;')]
    if owl_elems[i][4] == 'ФЗ \"О биологической безопасности\"' :
        owl_elems[i][4] = 'ФЗ \"О биологической безопасности РФ\"'


view = []
for concept in owl_elems:
    view.append(concept[4])


del concept
del i
del j


from docx import Document

document = Document()


for i in range(len(owl_elems)):
    table = document.add_table(rows=4, cols=3)
    row = table.rows[0]
    row.cells[1].text = "RU"
    row.cells[2].text = "EN"
    row = table.rows[1]
    row.cells[0].text = "prefLabel"
    row.cells[1].text = owl_elems[i][1]
    row.cells[2].text = owl_elems[i][0]
    row = table.rows[2]
    row.cells[0].text = "definition"
    row.cells[1].text = owl_elems[i][3]
    row.cells[2].text = owl_elems[i][2]
    row = table.rows[3]
    row.cells[0].text = "isDefinedBy"
    row.cells[1].text = owl_elems[i][4]
    document.add_page_break()


document.save('tables.docx')